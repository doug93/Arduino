#include <Wire.h> // Include Wire Library for I2C

// Include Adafruit Graphics & OLED libraries
#include <Adafruit_SSD1306.h>
#include <Adafruit_GFX.h>

#define OLED_RESET 4 // Reset pin not used but needed for library

//define pixal dimensions of the OLEDs that we are working with
#define OLED_WIDTH 128
#define OLED_HIGHT 32
#define OLED_RESET 4

#define OLED_Address 0x3c //i2c address of the OLED displays we are working with - they are all the same
#define Multiplexer1_Address 0x70 // i2c address of first multiplexer which has A0, A1 and A2 disconnected
#define Multiplexer2_Address 0x71 // i2c address of second multiplexer which has A0 linked to 5 volts but A1 and A2 disconnected


// define the two screens we are working with to be referred tol later in the code
Adafruit_SSD1306 Screen1(OLED_RESET);
Adafruit_SSD1306 Screen2(OLED_RESET);

// character arrays set for the two screens we are working with
char Screen1Text [] {"0x70 Channel 0"}; //to start with these two arrays are just being set to the address and channel needed to print to the corresponding displya
char Screen2Text [] {"0x70 Channel 1"};

void SwitchToScreen1() { //setting a function to feed a byte to the multiplexer to change the channel
  
  Wire.beginTransmission(Multiplexer1_Address);
  Wire.write(1 << 0); //write the pins [SD0,SC0]
  Wire.endTransmission(); 

}

void SwitchToScreen2() { //setting a function to feed a byte to the multiplexer to change the channel
  
  Wire.beginTransmission(Multiplexer1_Address);
  Wire.write(1 << 1); //write the pins [SD1,SC1]
  Wire.endTransmission(); 

}

void UpdateScreen1() { //setting up a function to update the physical screen based on the characters currently stored in the corresponding character array

  SwitchToScreen1();
  Screen1.clearDisplay();
  Screen1.setTextSize(2);
  Screen1.setTextColor(WHITE);
  Screen1.setCursor(0,0);
  Screen1.println(Screen1Text);
  Screen1.display();

}


void UpdateScreen2() { //setting up a function to update the physical screen based on the characters currently stored in the corresponding character array

  SwitchToScreen2();
  Screen2.clearDisplay();
  Screen2.setTextSize(2);
  Screen2.setTextColor(WHITE);
  Screen2.setCursor(0,0);
  Screen2.println(Screen1Text);
  Screen2.display();

}


void setup() {

 Wire.begin(); // Start Wire library for I2C


// Set multiplexer to channel 1 and initialize OLED-0 with its I2C address
 SwitchToScreen1();
 Screen1.begin(SSD1306_SWITCHCAPVCC, OLED_Address);
 Screen1.clearDisplay();

 delay(300);

 SwitchToScreen2();
 Screen2.begin(SSD1306_SWITCHCAPVCC, OLED_Address);
 Screen2.clearDisplay();

 delay(300);

}

void loop() {
  
  UpdateScreen1();
  UpdateScreen2();

  delay(300);

}
