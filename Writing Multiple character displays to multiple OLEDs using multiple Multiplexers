#include <Wire.h> // Include Wire Library for I2C

// Include Adafruit Graphics & OLED libraries
#include <Adafruit_SSD1306.h>
#include <Adafruit_GFX.h>

#define OLED_RESET 4 // Reset pin not used but needed for library

//define pixal dimensions of the OLEDs that we are working with
#define OLED_WIDTH 128
#define OLED_HEIGHT 64

#define OLED_Address 0x3c //i2c address of the OLED displays we are working with - they are all the same
#define Multiplexer1_Address 0x70 // i2c address of first multiplexer which has A0, A1 and A2 disconnected
#define Multiplexer2_Address 0x71 // i2c address of second multiplexer which has A0 linked to 5 volts but A1 and A2 disconnected


// define the two screens we are working with to be referred to later in the code
Adafruit_SSD1306 Screen1(OLED_WIDTH, OLED_HEIGHT, &Wire, -1);
Adafruit_SSD1306 Screen2(OLED_WIDTH, OLED_HEIGHT, &Wire, -1);
Adafruit_SSD1306 Screen3(OLED_WIDTH, OLED_HEIGHT, &Wire, -1);

// character arrays set for the two screens we are working with
char Screen1Text [] {"0x70 Channel 0"}; //to start with these two arrays are just being set to the address and channel needed to print to the corresponding displya
char Screen2Text [] {"0x70 Channel 1"};
char Screen3Text [] {"0x71 Channel 0"};


//function to set multiplexers to ahve all channels off
 void TurnMultiplexer1Off(){

 Wire.beginTransmission(Multiplexer1_Address);
 Wire.write(0);  // no channel selected
 Wire.endTransmission();

}

void TurnMultiplexer2Off(){

 Wire.beginTransmission(Multiplexer2_Address);
 Wire.write(0);  // no channel selected
 Wire.endTransmission();

}



//setting a function to feed a byte to the multiplexer1 to change the channel
  void SwitchMultiplexer1Channel(uint8_t bus){
  Wire.beginTransmission(Multiplexer1_Address);
  Wire.write(1 << bus);          // send byte to select bus
  Wire.endTransmission();
  Serial.print(bus);
}


//setting a function to feed a byte to the multiplexer2 to change the channel
  void SwitchMultiplexer2Channel(uint8_t bus){
  Wire.beginTransmission(Multiplexer2_Address);
  Wire.write(1 << bus);          // send byte to select bus
  Wire.endTransmission();
  Serial.print(bus);
}




void UpdateScreen1() { //setting up a function to update the physical screen based on the characters currently stored in the corresponding character array

 SwitchMultiplexer1Channel(0);
 Screen1.clearDisplay();
 Screen1.setTextSize(2);
 Screen1.setTextColor(WHITE);
 Screen1.setCursor(0,0);
 Screen1.println(Screen1Text);
 Screen1.display();
 TurnMultiplexer1Off();

}


void UpdateScreen2() { //setting up a function to update the physical screen based on the characters currently stored in the corresponding character array

  SwitchMultiplexer1Channel(1);
  Screen2.clearDisplay();
  Screen2.setTextSize(2);
  Screen2.setTextColor(WHITE);
  Screen2.setCursor(0,0);
  Screen2.println(Screen2Text);
  Screen2.display();
  TurnMultiplexer1Off();

}


void UpdateScreen3() { //setting up a function to update the physical screen based on the characters currently stored in the corresponding character array

  SwitchMultiplexer2Channel(1);
  Screen3.clearDisplay();
  Screen3.setTextSize(2);
  Screen3.setTextColor(WHITE);
  Screen3.setCursor(0,0);
  Screen3.println(Screen3Text);
  Screen3.display();
  TurnMultiplexer2Off();

}


void setup() {

Serial.begin(115200);

Wire.begin(); // Start Wire library for I2C

 TurnMultiplexer1Off();
 TurnMultiplexer2Off();

  SwitchMultiplexer1Channel(0); // Set multiplexer to channel 0 and initialize OLED-0 with its I2C address
  Screen1.begin(SSD1306_SWITCHCAPVCC, OLED_Address);
  TurnMultiplexer1Off();

 delay(300);
 
  SwitchMultiplexer1Channel(1);
  Screen2.begin(SSD1306_SWITCHCAPVCC, OLED_Address);
  TurnMultiplexer1Off();

 delay(300);

  SwitchMultiplexer2Channel(1);
  Screen3.begin(SSD1306_SWITCHCAPVCC, OLED_Address);
  TurnMultiplexer2Off();

 delay(300);

 UpdateScreen1();

 delay(300);

 UpdateScreen2();

 delay(300);

 UpdateScreen3();

 delay(300);

}


void loop(){


}
